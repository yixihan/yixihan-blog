(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{443:function(_,v,e){"use strict";e.r(v);var o=e(2),d=Object(o.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"mysql-mvcc"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mysql-mvcc"}},[_._v("#")]),_._v(" MySQL - MVCC")]),_._v(" "),v("h2",{attrs:{id:"一致性非锁定读和锁定读"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一致性非锁定读和锁定读"}},[_._v("#")]),_._v(" 一致性非锁定读和锁定读")]),_._v(" "),v("h3",{attrs:{id:"一致性非锁定读"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一致性非锁定读"}},[_._v("#")]),_._v(" 一致性非锁定读")]),_._v(" "),v("p",[_._v("对于 "),v("a",{attrs:{href:"https://dev.mysql.com/doc/refman/5.7/en/innodb-consistent-read.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("一致性非锁定读 (Consistent Nonlocking Reads)"),v("OutboundLink")],1),_._v(" 的实现, 通常做法是加一个 "),v("strong",[_._v("版本号")]),_._v(" 或者 "),v("strong",[_._v("时间戳")]),_._v(" 字段, 在更新数据的同时更新版本号或者时间戳. 查询时, 将当前可见的版本号与对应记录的版本号进行对比, 如果记录的版本号小于可见版本号, 则表示该记录可见")]),_._v(" "),v("p",[_._v("在 "),v("code",[_._v("InnoDB")]),_._v(" 存储引擎中, "),v("a",{attrs:{href:"https://dev.mysql.com/doc/refman/5.7/en/innodb-multi-versioning.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("多版本控制 (multi versioning)"),v("OutboundLink")],1),_._v(" 就是对非锁定读的实现. 如果读取的行正在执行 "),v("code",[_._v("DELETE")]),_._v(" 或 "),v("code",[_._v("UPDATE")]),_._v(" 操作, 这时读取操作不会去等待行上锁的释放. 相反的, "),v("code",[_._v("InnoDB")]),_._v(" 存储引擎会去读取行的一个快照数据, 对于这种读取历史数据的方式, 称之为 "),v("strong",[_._v("快照读 (snapshot read)")])]),_._v(" "),v("p",[_._v("在可重复读 ( "),v("code",[_._v("Repeatable Read")]),_._v(") 和读已提交 ("),v("code",[_._v("Read Commit")]),_._v(") 两个隔离级别下, 如果执行普通的 "),v("code",[_._v("SELECT")]),_._v(" 语句 (不包括 "),v("code",[_._v("select .... lock in share mode")]),_._v(", "),v("code",[_._v("select ... for update")]),_._v(") 则会使用 "),v("strong",[_._v("一致性非锁定读 (MVCC)")]),_._v(". 并且在 "),v("strong",[_._v("可重复读 ("),v("code",[_._v("Repeatable Read")]),_._v(") 下 "),v("code",[_._v("MVCC")]),_._v(" 实现了可重复读和防止部分幻读")])]),_._v(" "),v("h3",{attrs:{id:"锁定读"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#锁定读"}},[_._v("#")]),_._v(" 锁定读")]),_._v(" "),v("p",[_._v("如果执行的是下列语句, 就是 "),v("a",{attrs:{href:"https://dev.mysql.com/doc/refman/5.7/en/innodb-locking-reads.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("锁定读 (Locking Reads)"),v("OutboundLink")],1)]),_._v(" "),v("ul",[v("li",[v("code",[_._v("select ... lock in share mode")])]),_._v(" "),v("li",[v("code",[_._v("select ... for update")])]),_._v(" "),v("li",[v("code",[_._v("insert")]),_._v(", "),v("code",[_._v("update")]),_._v(", "),v("code",[_._v("delete")]),_._v(" 操作")])]),_._v(" "),v("p",[_._v("在锁定读下, 读取的是数据的最新版本, 这种读也被称为 "),v("strong",[_._v("当前读 (current read)")]),_._v(". 锁定读会对读取到的记录加锁 :")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("select ... lock in share mode")]),_._v(" : 对记录加 "),v("code",[_._v("S")]),_._v(" 锁, 其他事务也可以加 "),v("code",[_._v("S")]),_._v(" 锁, 如果加 "),v("code",[_._v("X")]),_._v(" 锁则会被阻塞")]),_._v(" "),v("li",[v("code",[_._v("select ... for update")]),_._v(", "),v("code",[_._v("insert")]),_._v(", "),v("code",[_._v("update")]),_._v(", "),v("code",[_._v("delete")]),_._v(" : 对记录加 "),v("code",[_._v("X")]),_._v(" 锁, 且其他事务不能加任何锁")])]),_._v(" "),v("p",[_._v("在一致性非锁定读下, 即使读取的记录已经被其他事务加上 "),v("code",[_._v("X")]),_._v(" 锁, 这时记录也是可以被读取的, 即读取的是快照数据.")]),_._v(" "),v("p",[_._v("在可重复读 ("),v("code",[_._v("Repeatable Read")]),_._v(") 下 "),v("code",[_._v("MVCC")]),_._v(' 防止了部分幻读, 这里的"部分"是指在 '),v("strong",[_._v("一致性非锁定读")]),_._v(" 的情况下, 只能读取到第一次查询之前所插入的数据 (根据 "),v("code",[_._v("Read View")]),_._v(" 判断数据可见性, "),v("code",[_._v("Read View")]),_._v(" 在第一次查询时生成).")]),_._v(" "),v("p",[_._v("但是, 如果是 "),v("strong",[_._v("当前读")]),_._v(", 每次读取的都是最新数据, 这时如果两次查询中间有其他事务插入数据, 就会产生幻读.")]),_._v(" "),v("p",[_._v("所以, "),v("strong",[v("code",[_._v("InnoDB")]),_._v(" 在实现可重复读 ("),v("code",[_._v("Repeatable Read")]),_._v(") 时, 如果执行的是==当前读==, 则会对读取的记录使用 "),v("code",[_._v("Next-key lock")]),_._v(", 来防止其他事务在间隙间插入数据")])]),_._v(" "),v("h2",{attrs:{id:"innodb-对-mvcc-的实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#innodb-对-mvcc-的实现"}},[_._v("#")]),_._v(" InnoDB 对 MVCC 的实现")]),_._v(" "),v("p",[v("code",[_._v("MVCC")]),_._v(" 的实现依赖于 :")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("隐藏字段")])]),_._v(" "),v("li",[v("strong",[v("code",[_._v("Read View")])])]),_._v(" "),v("li",[v("strong",[v("code",[_._v("undo log")])])])]),_._v(" "),v("p",[_._v("在内部实现中, "),v("code",[_._v("InnoDB")]),_._v(" 通过数据行的 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 和 "),v("code",[_._v("Read View")]),_._v(" 来判断数据的可见性.")]),_._v(" "),v("p",[_._v("如果数据不可见, 则通过数据行的 "),v("code",[_._v("DB_ROLL_PTR")]),_._v(" 找到 "),v("code",[_._v("undo log")]),_._v(" 中的历史版本. 每个事务读到的数据版本可能是不一样的, "),v("strong",[_._v("在同一个事务中, 用户只能看到该事务创建 "),v("code",[_._v("Read View")]),_._v(" 之前已经提交的修改和改事务本身做的修改")])]),_._v(" "),v("h3",{attrs:{id:"隐藏字段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#隐藏字段"}},[_._v("#")]),_._v(" 隐藏字段")]),_._v(" "),v("p",[_._v("在内部, "),v("code",[_._v("InnoDB")]),_._v(" 存储引擎为每行数据添加了三个 "),v("a",{attrs:{href:"https://dev.mysql.com/doc/refman/5.7/en/innodb-multi-versioning.html",target:"_blank",rel:"noopener noreferrer"}},[_._v("隐藏字段"),v("OutboundLink")],1),_._v(" :")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("DB_TRX_ID")]),_._v(" (6 字节) : "),v("strong",[_._v("表示最后一次插入或更新该行的事务 ID")]),_._v(". 此外, "),v("code",[_._v("delete")]),_._v(" 操作在内部被视为更新, 只不过会在记录头 "),v("code",[_._v("Record header")]),_._v(" 中的 "),v("code",[_._v("deleted_flag")]),_._v(" 字段将其标记为已删除")]),_._v(" "),v("li",[v("code",[_._v("DB_ROLL_PTR")]),_._v(" (7 字节) : "),v("strong",[_._v("回滚指针")]),_._v(", 指向该行的 "),v("code",[_._v("undo log")]),_._v(". 如果该行未被更新, 则为空")]),_._v(" "),v("li",[v("code",[_._v("DB_ROW_ID")]),_._v(" (6 字节) : 如果没有设置主键且该表没有唯一非空索引时, "),v("code",[_._v("InnoDB")]),_._v(" 会使用该 id 来生成聚集索引")])]),_._v(" "),v("h3",{attrs:{id:"read-view"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#read-view"}},[_._v("#")]),_._v(" Read View")]),_._v(" "),v("blockquote",[v("p",[_._v("用途")])]),_._v(" "),v("p",[v("a",{attrs:{href:"https://github.com/facebook/mysql-8.0/blob/8.0/storage/innobase/include/read0types.h#L298",target:"_blank",rel:"noopener noreferrer"}},[_._v("Read View"),v("OutboundLink")],1),_._v(" 主要是用来做 "),v("strong",[_._v("可见性判断")]),_._v(', 里面保存了 "当前对本事务不可见的其他活跃事务"')]),_._v(" "),v("blockquote",[v("p",[_._v("字段")])]),_._v(" "),v("div",{staticClass:"language-c++ line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[_._v("class ReadView {\n  /* ... */\nprivate\n  trx_id_t m_low_limit_id;      /* 大于等于这个 ID 的事务均不可见 */\n\n  trx_id_t m_up_limit_id;       /* 小于这个 ID 的事务均可见 */\n\n  trx_id_t m_creator_trx_id;    /* 创建该 Read View 的事务ID */\n\n  trx_id_t m_low_limit_no;      /* 事务 Number, 小于该 Number 的 Undo Logs 均可以被 Purge */\n\n  ids_t m_ids;                  /* 创建 Read View 时的活跃事务列表 */\n\n  m_closed;                     /* 标记 Read View 是否 close */\n}\n")])]),_._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br"),v("span",{staticClass:"line-number"},[_._v("2")]),v("br"),v("span",{staticClass:"line-number"},[_._v("3")]),v("br"),v("span",{staticClass:"line-number"},[_._v("4")]),v("br"),v("span",{staticClass:"line-number"},[_._v("5")]),v("br"),v("span",{staticClass:"line-number"},[_._v("6")]),v("br"),v("span",{staticClass:"line-number"},[_._v("7")]),v("br"),v("span",{staticClass:"line-number"},[_._v("8")]),v("br"),v("span",{staticClass:"line-number"},[_._v("9")]),v("br"),v("span",{staticClass:"line-number"},[_._v("10")]),v("br"),v("span",{staticClass:"line-number"},[_._v("11")]),v("br"),v("span",{staticClass:"line-number"},[_._v("12")]),v("br"),v("span",{staticClass:"line-number"},[_._v("13")]),v("br"),v("span",{staticClass:"line-number"},[_._v("14")]),v("br"),v("span",{staticClass:"line-number"},[_._v("15")]),v("br")])]),v("p",[v("code",[_._v("Read View")]),_._v(" 主要有以下字段 :")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("m_low_limit_id")]),_._v(" : 目前出现过的最大的事务 ID + 1, 即 "),v("strong",[_._v("下一个即将被分配的事务 ID, 大于等于这个 ID 的数据版本均不可见")])]),_._v(" "),v("li",[v("code",[_._v("m_up_limit_id")]),_._v(" : 活跃事务列表 "),v("code",[_._v("m_ids")]),_._v(" 中最小的事务 ID, 如果 "),v("code",[_._v("m_ids")]),_._v(" 为空, 则 "),v("code",[_._v("m_up_limit_id")]),_._v(" 为 "),v("code",[_._v("m_low_limit_id")]),_._v(". "),v("strong",[_._v("小于这个 ID 的事务版本均可见")])]),_._v(" "),v("li",[v("code",[_._v("m_ids")]),_._v(" : "),v("code",[_._v("Read View")]),_._v(" 创建时其他未提交的活跃事务 ID 列表. 创建 "),v("code",[_._v("Read View")]),_._v(" 时, 将当前未提交事务 ID 记录下来, 后续即使它们修改了记录行的值, 对于当前事务也是不可见的. "),v("code",[_._v("m_ids")]),_._v(" 不包括当前事务自己和已提交的事务 (正在内存中)")]),_._v(" "),v("li",[v("code",[_._v("m_creator_trx_id")]),_._v(" : 创建该 "),v("code",[_._v("Read View")]),_._v(" 的事务 ID")])]),_._v(" "),v("blockquote",[v("p",[_._v("事务可见性示意图")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://typora-photo-yixihan.oss-cn-chengdu.aliyuncs.com/img/trans_visible.jpg",alt:"trans_visible"}})]),_._v(" "),v("h3",{attrs:{id:"undo-log"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#undo-log"}},[_._v("#")]),_._v(" undo log")]),_._v(" "),v("blockquote",[v("p",[_._v("作用")])]),_._v(" "),v("p",[v("code",[_._v("undo log")]),_._v(" 主要有两个作用 :")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("当事务回滚时用于将数据恢复到修改前的样子")])]),_._v(" "),v("li",[v("p",[_._v("同 隐藏字段, "),v("code",[_._v("Read View")]),_._v(" 共同实现 "),v("code",[_._v("MVCC")])]),_._v(" "),v("p",[_._v("当读取记录时, 若该记录被其他事务占用或当前版本对该事务不可见, 则可以通过 "),v("code",[_._v("undo log")]),_._v(" 读取之前的版本数据, 以此实现非锁定读")])])]),_._v(" "),v("blockquote",[v("p",[_._v("类型")])]),_._v(" "),v("p",[_._v("在 "),v("code",[_._v("InnoDB")]),_._v(" 存储引擎中, "),v("code",[_._v("undo log")]),_._v(" 分为两种 :")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("insert undo log")])]),_._v(" "),v("li",[v("code",[_._v("update undo log")])])]),_._v(" "),v("h4",{attrs:{id:"insert-undo-log"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#insert-undo-log"}},[_._v("#")]),_._v(" insert undo log")]),_._v(" "),v("p",[v("code",[_._v("insert undo log")]),_._v(" 指在 "),v("code",[_._v("insert")]),_._v(" 操作中产生的 "),v("code",[_._v("undo log")])]),_._v(" "),v("p",[_._v("因为 "),v("code",[_._v("insert")]),_._v(" 操作的记录只对事务本身可见, 对其他事务不可见, 故该 "),v("code",[_._v("undo log")]),_._v(" 可以在事务提交后直接删除. 不需要进行 "),v("code",[_._v("purge")]),_._v(" 操作")]),_._v(" "),v("h5",{attrs:{id:"原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[_._v("#")]),_._v(" 原理")]),_._v(" "),v("blockquote",[v("p",[v("code",[_._v("insert")]),_._v(" 时的数据初始状态")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://typora-photo-yixihan.oss-cn-chengdu.aliyuncs.com/img/317e91e1-1ee1-42ad-9412-9098d5c6a9ad.png",alt:"img"}})]),_._v(" "),v("h4",{attrs:{id:"update-undo-log"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#update-undo-log"}},[_._v("#")]),_._v(" update undo log")]),_._v(" "),v("p",[v("code",[_._v("update undo log")]),_._v(" 是指在 "),v("code",[_._v("update")]),_._v(" 或 "),v("code",[_._v("delete")]),_._v(" 操作中产生的 "),v("code",[_._v("undo log")])]),_._v(" "),v("p",[_._v("该 "),v("code",[_._v("undo log")]),_._v(" 可能需要提供 "),v("code",[_._v("MVCC")]),_._v(" 机制, 因此不能在事务提交时就进行删除. 提交时放入 "),v("code",[_._v("undo log")]),_._v(" 链表, 等待 "),v("code",[_._v("purge")]),_._v(" 线程进行最后的删除")]),_._v(" "),v("h5",{attrs:{id:"原理-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原理-2"}},[_._v("#")]),_._v(" 原理")]),_._v(" "),v("blockquote",[v("p",[_._v("数据第一次被修改时")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://typora-photo-yixihan.oss-cn-chengdu.aliyuncs.com/img/c52ff79f-10e6-46cb-b5d4-3c9cbcc1934a.png",alt:"img"}})]),_._v(" "),v("blockquote",[v("p",[_._v("数据第二次被修改时")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://typora-photo-yixihan.oss-cn-chengdu.aliyuncs.com/img/6a276e7a-b0da-4c7b-bdf7-c0c7b7b3b31c.png",alt:"img"}})]),_._v(" "),v("p",[_._v("不同事务或者相同事务的对同一记录行的修改, 会使该记录行的 "),v("code",[_._v("undo log")]),_._v(" 称为一条链表, 链首就是最新的记录, 链尾就是最早的旧记录")]),_._v(" "),v("h3",{attrs:{id:"数据可见性算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据可见性算法"}},[_._v("#")]),_._v(" 数据可见性算法")]),_._v(" "),v("p",[_._v("在 "),v("code",[_._v("InnoDB")]),_._v(" 存储引擎中, 创建一个新事务后, 执行每个 "),v("code",[_._v("select")]),_._v(" 语句前, 都会创建一个快照 ("),v("code",[_._v("Read View")]),_._v("), "),v("strong",[_._v("快照中保存了当前数据库系统中正处于活跃 (没有 "),v("code",[_._v("commit")]),_._v(") 的事务的 ID 号")]),_._v(". 其实简单的说保存的是系统中当前不应该被本事务看到的其他事务 ID 列表 (即 "),v("code",[_._v("m_ids")]),_._v(").")]),_._v(" "),v("p",[_._v("当用户在这个事务中尧都区某个记录行的时候, "),v("code",[_._v("InnoDB")]),_._v(" 存储引擎会将该记录行的 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 与 "),v("code",[_._v("Read View")]),_._v(" 中的一些变量及当前事务 ID 进行比较, 判断是否满足可见性条件")]),_._v(" "),v("h4",{attrs:{id:"算法实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法实现"}},[_._v("#")]),_._v(" 算法实现")]),_._v(" "),v("blockquote",[v("p",[_._v("算法原址 (github)")])]),_._v(" "),v("p",[v("a",{attrs:{href:"https://github.com/facebook/mysql-8.0/blob/8.0/storage/innobase/include/read0types.h#L161",target:"_blank",rel:"noopener noreferrer"}},[_._v("算法原址"),v("OutboundLink")],1)]),_._v(" "),v("blockquote",[v("p",[_._v("图示")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://typora-photo-yixihan.oss-cn-chengdu.aliyuncs.com/img/8778836b-34a8-480b-b8c7-654fe207a8c2.png",alt:"img"}})]),_._v(" "),v("h4",{attrs:{id:"算法原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法原理"}},[_._v("#")]),_._v(" 算法原理")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("如果记录 "),v("code",[_._v("DB_TRX_ID")]),_._v(" < "),v("code",[_._v("m_up_limit_id")]),_._v(", 那么表明最新修改该行的事务 ("),v("code",[_._v("DB_TRX_ID")]),_._v(") 在当前事务创建快照之前就提交了, 所以该记录行的值对当前事务是可见的")])]),_._v(" "),v("li",[v("p",[_._v("如果 "),v("code",[_._v("DB_TRX_ID")]),_._v(" >= "),v("code",[_._v("m_low_limit_id")]),_._v(", 那么表明最新修改该行的事务 ("),v("code",[_._v("DB_TRX_ID")]),_._v(") 在当前事务创建快照之后才进行修改, 所以该记录行的值对当前事务不可见. 跳到步骤 5")])]),_._v(" "),v("li",[v("p",[v("code",[_._v("m_ids")]),_._v(" 为空, 则表明在当前事务创建快照之前, 修改该行的事务就已经提交了, 所以该记录行的值对当前事务是可见的")])]),_._v(" "),v("li",[v("p",[_._v("如果 "),v("code",[_._v("m_up_limit_id")]),_._v(" <= "),v("code",[_._v("DB_TRX_ID")]),_._v(" < "),v("code",[_._v("m_low_limit_id")]),_._v(", 表明最新修改该行的事务 ("),v("code",[_._v("DB_TRX_ID")]),_._v(') 在当前事务创建快照的时候可能处于 "活动状态" 或者 "已提交状态". 所以就要对活跃事务列表 '),v("code",[_._v("m_ids")]),_._v(" 进行查找 (因为事务 ID 是有序的, 所以使用二分查找)")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("如果在活跃事务列表 "),v("code",[_._v("m_ids")]),_._v(" 中能找到 "),v("code",[_._v("DB_TRX_ID")]),_._v(", 表名 :")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("在当前事务创建快照前, 该记录行的值被事务 ID 为 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 的事务修改了, 但没有提交")])]),_._v(" "),v("li",[v("p",[_._v("在当前事务创建快照后, 该记录行的值被事务 ID 为 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 的时候修改了")]),_._v(" "),v("p",[_._v("这些情况下, 这个记录行的值对于当前事务都是不可见的. 跳到步骤 5")])])])]),_._v(" "),v("li",[v("p",[_._v('在活跃事务列表中找不到, 则表明 "ID 为 '),v("code",[_._v("DB_TRX_ID")]),_._v(' 的事务" 在修改 "该记录行的值" 后, 在 "当前事务" 创建快照之前就已经提交了, 所以记录行对当前事务可见')])])])]),_._v(" "),v("li",[v("p",[_._v("在改记录行的 "),v("code",[_._v("DB_ROLL_PTR")]),_._v(" 指针指向的 "),v("code",[_._v("undo log")]),_._v(" 取出快照记录, 用快照记录的 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 跳到步骤 1 重新开始判断, 直到找到满足的快照版本或者返回空")])])]),_._v(" "),v("h2",{attrs:{id:"rc-和-rr-隔离级别下-mvcc-的差异"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rc-和-rr-隔离级别下-mvcc-的差异"}},[_._v("#")]),_._v(" RC 和 RR 隔离级别下 MVCC 的差异")]),_._v(" "),v("p",[_._v("在事务隔离级别为 读已提交 ("),v("code",[_._v("Read Commit")]),_._v(") 和 可重复读 ("),v("code",[_._v("Repeatable Read")]),_._v(") 下, "),v("code",[_._v("InnoDB")]),_._v(" 存储引擎使用 "),v("code",[_._v("MVCC")]),_._v(" (非锁定一致性读), 但它们生成 "),v("code",[_._v("Read View")]),_._v(" 的时机不同")]),_._v(" "),v("ul",[v("li",[_._v("在 "),v("code",[_._v("RC")]),_._v(" 隔离级别下, "),v("strong",[_._v("每次 "),v("code",[_._v("select")]),_._v(" 查询前都生成一个 "),v("code",[_._v("Read View")]),_._v(" (m_ids 列表)")])]),_._v(" "),v("li",[_._v("在 "),v("code",[_._v("RR")]),_._v(" 隔离级别下, 只有事务创建后, "),v("strong",[_._v("第一次 "),v("code",[_._v("select")]),_._v(" 数据前生成一个 "),v("code",[_._v("Read View")]),_._v(" (m_ids 列表)")])])]),_._v(" "),v("h2",{attrs:{id:"mvcc-解决不可重复读问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mvcc-解决不可重复读问题"}},[_._v("#")]),_._v(" MVCC 解决不可重复读问题")]),_._v(" "),v("p",[_._v("虽然 "),v("code",[_._v("RC")]),_._v(" 和 "),v("code",[_._v("RR")]),_._v(" 都通过 "),v("code",[_._v("MVCC")]),_._v(" 来读取快照数据, 但由于 "),v("strong",[_._v("生成 "),v("code",[_._v("Read VIew")]),_._v(" 时机不同")]),_._v(", 从而在 "),v("code",[_._v("RR")]),_._v(" 级别下实现可重复读")]),_._v(" "),v("blockquote",[v("p",[_._v("例子")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://typora-photo-yixihan.oss-cn-chengdu.aliyuncs.com/img/6fb2b9a1-5f14-4dec-a797-e4cf388ed413.png",alt:"img"}})]),_._v(" "),v("h3",{attrs:{id:"在-rc-下-read-view-生成情况"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#在-rc-下-read-view-生成情况"}},[_._v("#")]),_._v(" 在 RC 下 Read View 生成情况")]),_._v(" "),v("p",[v("strong",[_._v("在读已提交级别下，事务在每次查询开始时都会生成并设置新的 "),v("code",[_._v("Read View")]),_._v(", ("),v("code",[_._v("m_ids")]),_._v(" 列表)")])]),_._v(" "),v("blockquote",[v("p",[_._v("T4 时间点, 数据行 ID = 1 的版本链")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://typora-photo-yixihan.oss-cn-chengdu.aliyuncs.com/img/a3fd1ec6-8f37-42fa-b090-7446d488fd04.png",alt:"img"}})]),_._v(" "),v("p",[_._v("由于 "),v("code",[_._v("RC")]),_._v(" 级别下每次查询都会生成 "),v("code",[_._v("Read View")]),_._v(", 这时事务 101, 102 并未提交")]),_._v(" "),v("p",[_._v("此时 **103 事务生成的 "),v("code",[_._v("Read View")]),_._v(" 中活跃的事务 "),v("code",[_._v("m_ids")]),_._v(" 为 [101, 102], "),v("code",[_._v("m_up_limit_id")]),_._v(" 为 101, "),v("code",[_._v("m_low_limit_id")]),_._v(" 为 104, "),v("code",[_._v("m_creator_trx_id")]),_._v(" 为 103 **")]),_._v(" "),v("ul",[v("li",[_._v("此时最新记录的 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 为 101, "),v("code",[_._v("m_up_limit_id")]),_._v(" <= 101 < "),v("code",[_._v("m_low_limit_id")]),_._v(", 所以要在 "),v("code",[_._v("m_ids")]),_._v(" 列表中查找, 发现 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 存在列表中, 那么这个记录不可见")]),_._v(" "),v("li",[_._v("根据 "),v("code",[_._v("DB_ROLL_PTR")]),_._v(" 找到 "),v("code",[_._v("undo log")]),_._v(" 的上一版记录, 上一条记录的 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 还是 101, 不可见")]),_._v(" "),v("li",[_._v("继续找上一条 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 为 1, 满足 1 < "),v("code",[_._v("m_up_limit_id")]),_._v(", 可见, 所以事务 103 在 T4 时间点查询到数据为 "),v("code",[_._v("name = 菜花")])])]),_._v(" "),v("blockquote",[v("p",[_._v("T6 时间点, 数据行 ID = 1 的版本链")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://typora-photo-yixihan.oss-cn-chengdu.aliyuncs.com/img/528559e9-dae8-4d14-b78d-a5b657c88391.png",alt:"markdown"}})]),_._v(" "),v("p",[_._v("由于 "),v("code",[_._v("RC")]),_._v(" 级别下每次查询都会生成 "),v("code",[_._v("Read View")]),_._v(", 这时事务 101 已经提交, 事务 102 并未提交")]),_._v(" "),v("p",[_._v("此时 "),v("strong",[_._v("103 事务生成的 "),v("code",[_._v("Read VIew")]),_._v(" 中活跃的事务 "),v("code",[_._v("m_ids")]),_._v(" 为 [102], "),v("code",[_._v("m_up_limit_id")]),_._v(" 为 102, "),v("code",[_._v("m_low_limit_id")]),_._v(" 为 104, "),v("code",[_._v("m_creator_rtx_id")]),_._v(" 为 103")])]),_._v(" "),v("ul",[v("li",[_._v("此时最新记录中 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 为 102, "),v("code",[_._v("m_up_limit_id")]),_._v(" <= 102 < "),v("code",[_._v("m_low_limit_id")]),_._v(", 所以要在 "),v("code",[_._v("m_ids")]),_._v(" 列表中查找, 发现 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 存在列表中, 那么这个记录不可见")]),_._v(" "),v("li",[_._v("根据 "),v("code",[_._v("DB_ROLL_PTR")]),_._v(" 找到 "),v("code",[_._v("undo log")]),_._v(" 中的上一版本记录, 上一条记录的 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 为 101, 满足 101 < "),v("code",[_._v("m_up_limit_id")]),_._v(", 记录可见, 所以事务 103 在 T6 时间点查询到数据为 "),v("code",[_._v("name = 李四")]),_._v(", 与 T4 事件单查询到的结果不一致, "),v("strong",[_._v("不可重复读")])])]),_._v(" "),v("blockquote",[v("p",[_._v("T9 时间点, 数据行 ID = 1 的版本链")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://typora-photo-yixihan.oss-cn-chengdu.aliyuncs.com/img/6f82703c-36a1-4458-90fe-d7f4edbac71a.png",alt:"markdown"}})]),_._v(" "),v("p",[_._v("由于 "),v("code",[_._v("RC")]),_._v(" 级别下每次查询都会生成 "),v("code",[_._v("Read View")]),_._v(", 这时事务 101, 102已经提交")]),_._v(" "),v("p",[_._v("此时 **103 事务生成的 "),v("code",[_._v("Read View")]),_._v(" 中活跃的事务 "),v("code",[_._v("m_ids")]),_._v(" 为 [], "),v("code",[_._v("m_up_limit_id")]),_._v(" 为 104, "),v("code",[_._v("m_low_limit_id")]),_._v(" 为 104, "),v("code",[_._v("m_creator_trx_id")]),_._v(" 为 103, **")]),_._v(" "),v("ul",[v("li",[_._v("此时最新记录中 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 为 102, 满足 102 < "),v("code",[_._v("m_up_limit_id")]),_._v(", 可见, 所以事务 103 在 T9 时间点查询到数据为 "),v("code",[_._v("name = 赵六")]),_._v(", 与 T6 事件单查询到的结果不一致, "),v("strong",[_._v("不可重复读")])])]),_._v(" "),v("h4",{attrs:{id:"总结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[_._v("#")]),_._v(" 总结")]),_._v(" "),v("p",[_._v("在 "),v("code",[_._v("RC")]),_._v(" 隔离级别下, 事务在每次查询开始时都会生成并设置新的 "),v("code",[_._v("Read View")]),_._v(", 所以导致不可重复读")]),_._v(" "),v("h3",{attrs:{id:"在-rr-下-read-view-生成情况"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#在-rr-下-read-view-生成情况"}},[_._v("#")]),_._v(" 在 RR 下 Read View 生成情况")]),_._v(" "),v("p",[v("strong",[_._v("在可重复读级别下, 只会在事务开始后第一次读取数据时生成一个 "),v("code",[_._v("Read View")]),_._v(" ("),v("code",[_._v("m_ids")]),_._v(" 列表)")])]),_._v(" "),v("blockquote",[v("p",[_._v("T4 时间点, 数据行 ID = 1 的版本链")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://typora-photo-yixihan.oss-cn-chengdu.aliyuncs.com/img/0e906b95-c916-4f30-beda-9cb3e49746bf.png",alt:"markdown"}})]),_._v(" "),v("p",[_._v("在当前执行 "),v("code",[_._v("select")]),_._v(" 语句时生成一个 "),v("code",[_._v("Read View")])]),_._v(" "),v("p",[v("strong",[v("code",[_._v("m_ids")]),_._v(" 为 [101, 102], "),v("code",[_._v("m_up_limit_id")]),_._v(" 为 101, "),v("code",[_._v("m_low_limit_id")]),_._v(" 为 104, "),v("code",[_._v("m_creator_trx_id")]),_._v(" 为 103")])]),_._v(" "),v("p",[_._v("此时和 "),v("code",[_._v("RC")]),_._v(" 级别下一样 :")]),_._v(" "),v("ul",[v("li",[_._v("最新记录的 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 为 101, "),v("code",[_._v("m_up_limit_id")]),_._v(" <= 101 < "),v("code",[_._v("m_low_limit_id")]),_._v(", 所以要在 "),v("code",[_._v("m_ids")]),_._v(" 列表中查找, 发现 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 存在列表中, 那么这个记录不可见")]),_._v(" "),v("li",[_._v("根据 "),v("code",[_._v("DB_ROLL_PTR")]),_._v(" 找到 "),v("code",[_._v("undo log")]),_._v(" 的上一版记录, 上一条记录的 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 还是 101, 不可见")]),_._v(" "),v("li",[_._v("继续找上一条 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 为 1, 满足 1 < "),v("code",[_._v("m_up_limit_id")]),_._v(", 可见, 所以事务 103 在 T4 时间点查询到数据为 "),v("code",[_._v("name = 菜花")])])]),_._v(" "),v("blockquote",[v("p",[_._v("T6 时间点, 数据行 ID = 1 的版本链")])]),_._v(" "),v("p",[v("img",{attrs:{src:"https://typora-photo-yixihan.oss-cn-chengdu.aliyuncs.com/img/79ed6142-7664-4e0b-9023-cf546586aa39.png",alt:"markdown"}})]),_._v(" "),v("p",[_._v("在 "),v("code",[_._v("RR")]),_._v(" 级别下只会生成一次 "),v("code",[_._v("Read View")]),_._v(", 所以此时依然沿用 T4 时间点的 "),v("code",[_._v("Read View")])]),_._v(" "),v("p",[v("strong",[v("code",[_._v("m_ids")]),_._v(" 为 [101, 102], "),v("code",[_._v("m_up_limit_id")]),_._v(" 为 101, "),v("code",[_._v("m_low_limit_id")]),_._v(" 为 104, "),v("code",[_._v("m_creator_trx_id")]),_._v(" 为 103")])]),_._v(" "),v("ul",[v("li",[_._v("最新记录的 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 为 102, "),v("code",[_._v("m_up_limit_id")]),_._v(" <= 102 < "),v("code",[_._v("m_low_limit_id")]),_._v(", 所以要在 "),v("code",[_._v("m_ids")]),_._v(" 列表中查找, 发现 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 存在列表中, 那么这个记录不可见")]),_._v(" "),v("li",[_._v("根据 "),v("code",[_._v("DB_ROLL_PTR")]),_._v(" 找到 "),v("code",[_._v("undo log")]),_._v(" 的上一版记录, 上一条记录的 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 是 101, "),v("code",[_._v("m_up_limit_id")]),_._v(" <= 102 < "),v("code",[_._v("m_low_limit_id")]),_._v(", 所以要在 "),v("code",[_._v("m_ids")]),_._v(" 列表中查找, 发现 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 存在列表中, 不可见")]),_._v(" "),v("li",[_._v("根据 "),v("code",[_._v("DB_ROLL_PTR")]),_._v(" 找到 "),v("code",[_._v("undo log")]),_._v(" 的上一版记录, 上一条记录的 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 还是 101, 不可见")]),_._v(" "),v("li",[_._v("继续找上一条 "),v("code",[_._v("DB_TRX_ID")]),_._v(" 为 1, 满足 1 < "),v("code",[_._v("m_up_limit_id")]),_._v(", 可见, 所以事务 103 在 T4 时间点查询到数据为 "),v("code",[_._v("name = 菜花")])])]),_._v(" "),v("blockquote",[v("p",[_._v("T9 时间点, 数据行 ID = 1 的版本链")])]),_._v(" "),v("p",[_._v("在 "),v("code",[_._v("RR")]),_._v(" 级别下只会生成一次 "),v("code",[_._v("Read View")]),_._v(", 所以此时依然沿用 T4 时间点的 "),v("code",[_._v("Read View")])]),_._v(" "),v("p",[v("strong",[v("code",[_._v("m_ids")]),_._v(" 为 [101, 102], "),v("code",[_._v("m_up_limit_id")]),_._v(" 为 101, "),v("code",[_._v("m_low_limit_id")]),_._v(" 为 104, "),v("code",[_._v("m_creator_trx_id")]),_._v(" 为 103")])]),_._v(" "),v("p",[_._v("此时情况和 T6 完全一样, 所以查询结果还是 "),v("code",[_._v("name = 菜花")])]),_._v(" "),v("h4",{attrs:{id:"总结-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[_._v("#")]),_._v(" 总结")]),_._v(" "),v("p",[_._v("在 "),v("code",[_._v("RR")]),_._v(" 隔离级别下, 只会在事务开始后第一次读取数据时生成一个 "),v("code",[_._v("Read View")]),_._v(", 所以是可重复读的")]),_._v(" "),v("h2",{attrs:{id:"mvcc-next-key-lock-防止幻读"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#mvcc-next-key-lock-防止幻读"}},[_._v("#")]),_._v(" MVCC + Next-key-Lock 防止幻读")]),_._v(" "),v("p",[v("code",[_._v("InnoDB")]),_._v(" 存储引擎在 "),v("code",[_._v("RR")]),_._v(" 级别下通过 "),v("code",[_._v("MVCC")]),_._v(" + "),v("code",[_._v("Next-key-Lock")]),_._v(" 来解决幻读问题")]),_._v(" "),v("p",[_._v("解决方法主要分为两个方面 :")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("执行普通 "),v("code",[_._v("select")]),_._v(", 此时会以 "),v("code",[_._v("MVCC")]),_._v(" 快照读的方式读取数据")]),_._v(" "),v("p",[_._v("在快照读的情况下, "),v("code",[_._v("RR")]),_._v(" 隔离级别只会在事务开启后的第一次查询生成 "),v("code",[_._v("Read View")]),_._v(", 并使用至事务提交.")]),_._v(" "),v("p",[_._v("所以在生成 "),v("code",[_._v("Read View")]),_._v(' 之后其他事务所做的更新, 插入记录版本对当前事务并不可见, 实现了可重复读和防止快照读下的 "幻读"')])]),_._v(" "),v("li",[v("p",[_._v("执行 "),v("code",[_._v("select ... for update / lock in share mode")]),_._v(", "),v("code",[_._v("insert")]),_._v(", "),v("code",[_._v("update")]),_._v(", "),v("code",[_._v("delete")]),_._v(" 等当前读")]),_._v(" "),v("p",[_._v("在当前读下, 读取的都是最新的数据, 如果其他事务有插入新的记录, 并且刚好在当前事务的查询范围内, 就会产生幻读.")]),_._v(" "),v("p",[v("code",[_._v("InnoDB")]),_._v(" 存储引擎使用 "),v("a",{attrs:{href:"https://dev.mysql.com/doc/refman/5.7/en/innodb-locking.html#innodb-next-key-locks",target:"_blank",rel:"noopener noreferrer"}},[_._v("Next-key-Lock"),v("OutboundLink")],1),_._v(" 来防止这种情况. 当执行当前读时, 会锁定读取到的记录的同时, 锁定它们的间隙, 防止其他事务在查询范围内插入数据. 只要我不让你插入, 就不会产生幻读")])])])])}),[],!1,null,null,null);v.default=d.exports}}]);